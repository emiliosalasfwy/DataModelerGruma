<BusinessLogic methodName="getDSForProducts" businessObjectClass="LoProductForAdd" businessObjectType="" asynchronous="null" accessibility="PUBLIC" final="false" module="CORE" simpleEditorOnly="">
  <Parameters>
    <MethodInput name="mergeProperty" type="DomString" />
    <MethodInput name="commitDate" type="DomDate" />
    <MethodInput name="addCond_ProductPKeys" type="String" />
    <MethodInput name="criterionAttribute" type="String" />
  </Parameters>
<Code language="JavaScript">
<![CDATA[// Datasource name (required by merge engine)
var LO_MEPRODUCTS = "LoMeProducts";

var dsParams = "";
var dsParams_array = [];

//SF/CASDiff: General Difference
if(Utils.isSfBackend()) // <!-- CW-REQUIRED: Framework is now Utils -->
{
  dsParams_array.push({ "field": "addCond_ForeignProduct", "value": " AND Product2.Competitive_Product__c = '0' " });  
  dsParams_array.push({ "field": "addCond_FieldState", "value": " AND (#compareAsDate('Product2.Field_Valid_From__c ', 'Date','<=',#TodayAsDate#, 'Date')#  AND #compareAsDate('Product2.Field_Valid_Thru__c', 'Date','>=',#TodayAsDate#, 'Date')#) " }); 
  
 // Add additional conditions for restricting products, e.g. invalid product check (called from LoOrderItems.processInvalidItems());  
  if (!Utils.isEmptyString(addCond_ProductPKeys)) {
    dsParams_array.push({ "field": "addCond_productPKeys", "value": " AND Product2.Id IN (" + addCond_ProductPKeys + ") " });
  }
  
  dsParams_array.push({ "field": "criterionAttribute", "value": criterionAttribute });
}else{
  
  dsParams_array.push({ "field": "addCond_ForeignProduct", "value": " AND PrdProduct.ForeignProduct = '0' " });  
  dsParams_array.push({ "field": "addCond_FieldState", "value": " AND PrdStateAbstract.FieldState = 'Available' " });  

  // Add additional conditions for restricting products, e.g. invalid product check (called from LoOrderItems.processInvalidItems());  
  if (!Utils.isEmptyString(addCond_ProductPKeys)) {
    dsParams_array.push({ "field": "addCond_productPKeys", "value": " AND PrdMainPKey IN (" + addCond_ProductPKeys + ") " });
  }
}

dsParams_array.push({ "field": "commitDate", "value": commitDate });   
dsParams = { "params": dsParams_array };

var datasourceDefiniton = {
  "boName": LO_MEPRODUCTS,
  "dsParams": dsParams,
  "matchingColumn": "pKey",
  "dataSourceColumns": [
    { "name": "pKey", "alias": "pKey" },
    { "name": "prdMainPKey", "alias": "prdMainPKey" },
    { "name": "text1", "alias": "text1" },
    { "name": "text2", "alias": "text2" },
    { "name": "prdId", "alias": "prdId" },
    { "name": "shortId", "alias": "shortId" },    
    { "name": "deliveryState", "alias": "deliveryState" },
    { "name": "fieldState", "alias": "fieldState" },
    { "name": "newState", "alias": "newState" },
    { "name": "groupingAttribute", "alias": "groupingAttribute" },
    { "name": "eAN", "alias": "eAN" },
    { "name": "foreignProduct", "alias": "foreignProduct" },
    { "name": "category", "alias": "category" },
    { "name": "prdType", "alias": "prdType" },
    { "name": "productGroup", "alias": "productGroup" },
    { "name": "groupId", "alias": "groupId" },
    { "name": "groupText", "alias": "groupText" }
  ],
  "mergeProperty": mergeProperty,
  "lookupDataSource": "false"
};]]>
</Code>
  <Return name="dsForProducts" value="datasourceDefiniton" />
</BusinessLogic>