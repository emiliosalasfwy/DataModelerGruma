<BusinessLogic methodName="assignSuggestedQuantity" businessObjectClass="BoOrder" businessObjectType="businessobject" asynchronous="true" accessibility="PUBLIC" final="false" module="CORE" simpleEditorOnly="">
  <Parameters>
    <MethodInput name="editConfirm" type="String" />
  </Parameters>
<Code language="JavaScript">
<![CDATA[var promise = when.resolve();
var orderItems = me.getLoItems().getItems();
var enableQuantityStepper = Utils.isDefined(me.getLoSelectablePromotion()) && Utils.isDefined(me.getLoSelectablePromotion().getCurrent()) && me.getLoSelectablePromotion().getCurrent().getSpecialPromoted() == "1";
me.getLoItems().suspendListRefresh();

if(editConfirm === "Yes") {
  orderItems = orderItems.filter(function(item){return item.getEdited() == "0";});
}

for(var i=0; i < orderItems.length; i++){
  var currentItem = orderItems[i];
  var isValidProductForAdd = currentItem.isEditable();

  if(isValidProductForAdd){
    //Assign suggested quantity to all items (except free items) of currently selected promotion
    if(!Utils.isDefined(currentItem.getParentType()) || Utils.isEmptyString(currentItem.getParentType())) {
      if(currentItem.getQuantity() != currentItem.getSuggestedQuantity()) {
        currentItem.setIsSuggestedClicked("1");
        currentItem.setQuantity(currentItem.getSpecialQuantity()); 
        currentItem.setTargetQuantity(currentItem.getSpecialQuantity());
      }
      currentItem.setEdited("0");
    }

    //Enable quantity stepper for all Special Orders items (except reward free items) on click of Apply Quantities
    if(enableQuantityStepper && (!Utils.isDefined(currentItem.getParentType()) || currentItem.getParentType() != 'Reward')){
      currentItem.getACL().addRight(AclObjectType.PROPERTY, "quantity", AclPermission.EDIT);
    }
  }
}

promise = me.getLoItems().resumeListRefreshAsync(false,true);]]>
</Code>
  <Return name="promise" value="promise" />
</BusinessLogic>