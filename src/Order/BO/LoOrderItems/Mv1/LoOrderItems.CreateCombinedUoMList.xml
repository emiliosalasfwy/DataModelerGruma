<BusinessLogic methodName="createCombinedUoMList" businessObjectClass="LoOrderItems" businessObjectType="listobject" asynchronous="true" accessibility="PUBLIC" final="false" module="CORE" simpleEditorOnly="">
  <Parameters>
    <MethodInput name="prdMainPKeys" type="Object" />
    <MethodInput name="category" type="String" />
  </Parameters>
<Code language="JavaScript">
<![CDATA[var logisticUnitParams = [];
var logisticUnitQuery = {};

var pkeysString = "" + prdMainPKeys.map(function(x){return "'" + x + "'";}).toString() + "";

logisticUnitParams.push({ "field": "ProductPKeys", "value":pkeysString });
logisticUnitParams.push({ "field": "LogisticCategory", "value":  category });

logisticUnitQuery.params = logisticUnitParams;

var promise = BoFactory.loadListAsync("LoLogisticUnitMultipleItems", logisticUnitQuery)
  .then(function(loLogisticUnit){
    var mainDict = Utils.createDictionary();
    var currentArr = [];
    var currentPrdPKey = "";

    var allLogistics = loLogisticUnit.getAllItems();
    for(var i = 0; i < allLogistics.length; i++)
    {
      var logistic = allLogistics[i];

      if(logistic.getPrdMainPKey() !== currentPrdPKey)
      {
        if(currentPrdPKey !== "")
        {
          mainDict.add(currentPrdPKey, currentArr);
          currentArr = [];
        }
        currentPrdPKey = logistic.getPrdMainPKey();
      }

      currentArr.push(logistic);      
    }

    mainDict.add(currentPrdPKey, currentArr);

    var result =
        {
          category: category,
          units: mainDict
        };

    return result;
  });]]>
</Code>
  <Return name="result" value="promise" />
</BusinessLogic>