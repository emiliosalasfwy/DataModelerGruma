<BusinessLogic methodName="loadOnDemand" businessObjectClass="BoProduct" businessObjectType="" asynchronous="true" accessibility="PUBLIC" final="false" module="CORE" simpleEditorOnly="">
  <Parameters>
    <MethodInput name="loadMode" type="String" />
  </Parameters>
<Code language="JavaScript">
<![CDATA[var promise = when.resolve();

if (loadMode === "Logistics" && !Utils.isDefined(me.getLoLogistics())) {
  promise = BoFactory.loadObjectByParamsAsync(LO_LOGISTICS, me.getQueryBy("ProductPKey", me.getPKey()))
    .then(function (loLogistics) {
    if (Utils.isDefined(loLogistics)) {
      me.setLoLogistics(loLogistics);
    } else {
      me.setLoLogistics(null);
    }
  });
}

if (loadMode === "Attachments" && !Utils.isDefined(me.getLoPrdAttachments())) {
  promise = BoFactory.loadObjectByParamsAsync(LO_PRDATTACHMENTS, me.getQueryBy("ProductPKey", me.getPKey()))
    .then(function (loPrdAttachments) {
    if (Utils.isDefined(loPrdAttachments)) {
      me.setLoPrdAttachments(loPrdAttachments);
    } else {
      me.setLoPrdAttachments(null);
    }	
  });
}

if (loadMode === "BoM" && !Utils.isDefined(me.getLoProductBoM())) {
  promise = BoFactory.loadObjectByParamsAsync(LO_PRODUCTBOM, me.getQueryBy("ProductPKey", me.getPKey()))
    .then(function (loProductBoM) {
    if (Utils.isDefined(loProductBoM)) {
      me.setLoProductBoM(loProductBoM);
    } else {
      me.setLoProductBoM(null);
    }	
  });
}]]>
</Code>
  <Return name="returnName" value="promise" />
</BusinessLogic>