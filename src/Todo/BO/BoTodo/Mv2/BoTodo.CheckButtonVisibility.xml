<BusinessLogic methodName="checkButtonVisibility" businessObjectClass="BoTodo" businessObjectType="" asynchronous="false" accessibility="PUBLIC" final="false" module="CORE" simpleEditorOnly="">
  <Parameters>
    <MethodInput name="mode" type="String" />
  </Parameters>
<Code language="JavaScript">
<![CDATA[var visible = false;    
var nextStates;

var ownerPKey = me.getOwnerPKey();
var responsiblePKey = me.getResponsiblePKey();
var ownerIsResponsible = ownerPKey === responsiblePKey;

var isResponsible = responsiblePKey === ApplicationContext.get('user').getPKey();
var ownerAndResponsibleNotEmptyAndUserIsResponsible = !Utils.isEmptyString(ownerPKey) && !Utils.isEmptyString(responsiblePKey) && isResponsible;
var issuePhase = me.getIssuePhase();

//SF/CASDIF: no workflow in salesforce thats why we emulate it.
if(Utils.isSfBackend())
{
  switch (mode) {

    case "release":
      visible = ownerAndResponsibleNotEmptyAndUserIsResponsible && issuePhase === "initial" && !ownerIsResponsible;
      break;

    case "complete":
      visible = ownerAndResponsibleNotEmptyAndUserIsResponsible && issuePhase != "Closed" && issuePhase != "Cancelled"  && ownerIsResponsible;
      break;

      /*no capture in salesforce because no attachments
      case "capture":
        if (isResponsible && issuePhase !== "Closed" && issuePhase !== "Cancelled") {
          visible = true;
        }
        break;   */
  }
}
else
{
  switch (mode) {

    case "release":
      nextStates = me.getBoWorkflow().getNextStatesByStateType(me.getActualStatePKey(), "Released");
      if(Utils.isDefined(nextStates[0]) && isResponsible){
        visible = true;
      }
      break;

    case "complete":
      nextStates = me.getBoWorkflow().getNextStatesByStateType(me.getActualStatePKey(), "Closed");
      if(Utils.isDefined(nextStates[0]) && isResponsible){
        visible = true;
      }
      break;

    case "capture":
      if (isResponsible && me.getIssuePhase() !== "Closed" && me.getIssuePhase() !== "Cancelled") {
        visible = true;
      }
      break;  
  }
}]]>
</Code>
  <Return name="visible" value="visible" />
</BusinessLogic>