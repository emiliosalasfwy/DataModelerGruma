<BusinessLogic methodName="getCustomerTasksForCard" businessObjectClass="LoIssueOverview" businessObjectType="listobject" asynchronous="true" accessibility="PUBLIC" final="false" module="CORE" simpleEditorOnly="">
  <Parameters>
    <MethodInput name="numberOfListItems" type="DomInteger" />
    <MethodInput name="cardDate" type="String" />
  </Parameters>
<Code language="JavaScript">
<![CDATA[var jsonQuery = {};
var jsonParams = [];
var jsonQueryCustomerOverview = {};
var jsonParamsCustomerOverview = [];
var dCardDate;
var customerSqlQuery = "";

var minDate = Utils.convertForDBParam(Utils.getMinDate(), "DomDate");
var currentUsrMainPKey = ApplicationContext.get('user').getPKey();
var loadLoCustomerOverviewObj = Facade.myProxy.getLoadStatement("LoCustomerOverview", jsonQueryCustomerOverview);

jsonQueryCustomerOverview.params = jsonParamsCustomerOverview;
jsonQuery.params = jsonParams;

if (Utils.isSfBackend()){
  dCardDate = Utils.convertForDBParam(cardDate, "DomDate");

  jsonQueryCustomerOverview.addCond_LeadTimeFollowUpTime = " ((SubBpaRelValidFrom <= #cardDate# AND SubBpaRelValidThru >= #cardDate#) OR Account_Manager__c.Id IS NOT NULL ) AND ";

  jsonQuery.cond = " AND issuePhase IN ('initial', 'Released') AND Account_Task__c.Due_Date__c <> #minDate# AND Account_Task__c.Due_Date__c <= #cardDate# ";
  jsonQuery.cond += " AND ((Account_Task__c.Responsible__c =  #currentUsrMainPKey# AND (Sub.SubMainUsrMainPKey IS NULL OR Sub.SubIsLeadFollowUpTime = #subIsLeadFollowUpTime#)) OR Sub.SubBpaRelUsrMainPKey = #currentUsrMainPKey#) ";
}
else{
  dCardDate = Utils.convertAnsiDate2Date(cardDate);
  dCardDate.setHours(0, 0, 0, 0);
  dCardDate = Utils.convertForDBParam(dCardDate, "DomDate");

  jsonQueryCustomerOverview.addCond_LeadTimeFollowUpTime = " (((DATETIME (SubBpaRelValidFrom) <= #cardDate# AND DATETIME (SubBpaRelValidThru) >= #cardDate#)) OR BpaManagement.Pkey IS NOT NULL ) AND ";

  jsonQuery.cond = " AND SvcIssue.IssuePhase IN ('initial', 'Released') AND SvcIssue.DueDate <> #minDate# AND  SvcIssue.DueDate <= #cardDate# ";
  jsonQuery.cond += " AND ((SvcIssue.ResponsiblePKey = #currentUsrMainPKey# AND (Sub.SubMainUsrMainPKey IS NULL OR Sub.SubIsLeadFollowUpTime = #subIsLeadFollowUpTime#)) OR Sub.SubBpaRelUsrMainPKey = #currentUsrMainPKey#) ";
}

jsonParams.push({"field" : "cardDate", "value" : dCardDate});
jsonParams.push({"field" : "minDate", "value" : minDate});
jsonParams.push({"field" : "currentUsrMainPKey", "value" : currentUsrMainPKey});
jsonParams.push({"field" : "subIsLeadFollowUpTime", "value" : '1'});

customerSqlQuery = "SELECT pKey FROM ( " + loadLoCustomerOverviewObj.sql + " ) ";
jsonParams.push({"field" : "loadLoCustomerOverviewParams", "value" : loadLoCustomerOverviewObj.params});

jsonQuery.loadLoCustomerOverview = customerSqlQuery;
jsonQuery.customerTask = "customerTask";

var promise = Facade.getListAsync("LoIssueOverview", jsonQuery)
.then(function(issue) {
  var numberOfTasks = numberOfListItems;

  if(!Utils.isDefined(numberOfTasks)){
    numberOfTasks = Utils.isPhone() ? 3 : 5;
  }
  me.cardItemCount = issue.length;
  issue = issue.splice(0, numberOfTasks);

  for(var i=0; i<issue.length; i++){
    if(Utils.isPhone()){
      if(issue[i].text.length > 35){
        issue[i].text= issue[i].text.substr(0, 35);	
        issue[i].text+= "...";
      }
    }
    else{
      if(issue[i].text.length > 40){
        issue[i].text= issue[i].text.substr(0, 40);	
        issue[i].text+= "...";
      }
    }
  }

  me.removeAllItems();
  me.addItems(issue);
  return me;
});]]>
</Code>
  <Return name="promise" value="promise" />
</BusinessLogic>