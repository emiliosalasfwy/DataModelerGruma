<BusinessLogic methodName="addMissingUoMsToItem" businessObjectClass="LoTruckLoadItems" businessObjectType="listobject" asynchronous="true" accessibility="PUBLIC" final="false" module="CORE" simpleEditorOnly="">
  <Parameters>
    <MethodInput name="mainItem" type="Object" />
    <MethodInput name="itemMeta" type="Object" />
    <MethodInput name="mode" type="String" />
  </Parameters>
<Code language="JavaScript">
<![CDATA[var promise = me.findAllMissingUoMForItem(mainItem, itemMeta).then(
  function (result) {
    var newItem = {};
    var setter = function (val, idx, array) {
      newItem[val] = mainItem[val];
    };

    var unitOfMeasureItems = [];

    for (var i = 0; i < result.length; i++) {
      // For review current stock do not add the missing UoM with higher PiecesPerSmallestUnit
      if (mode != "ReviewStock" || mainItem.piecesPerSmallestUnit >= result[i].getPiecesPerSmallestUnit()) {
        newItem = {};
        Object.getOwnPropertyNames(mainItem).forEach(setter);
        var isOrderUnit = result[i].getIsOrderUnit();

        newItem.pKey = PKey.next();
        newItem.quantityLogisticUnit = result[i].getUnitType();
        newItem.piecesPerSmallestUnit = result[i].getPiecesPerSmallestUnit();
        newItem.isOrderUnit = isOrderUnit;
        newItem.ivcInformationObject = isOrderUnit ? mainItem.ivcInformationObject : undefined;
        newItem.sort = result[i].getSort();
        newItem.quantity = 0;
        newItem.targetQuantity = 0;
        newItem.suggestedQuantity = 0;
        newItem.quantityForFreeItems = 0;
        newItem.targetQuantityForFreeItems = 0;
        newItem.objectStatus = STATE.NEW;

        unitOfMeasureItems.push(newItem);
      }
    }

    me.addItems(unitOfMeasureItems);

    me.orderBy({
      "refPKey": "ASC",
      "isOrderUnit": "DESC",
      "sort": "ASC"
    });
  }
);]]>
</Code>
  <Return name="result" value="promise" />
</BusinessLogic>