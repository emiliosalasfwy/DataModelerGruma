<BusinessLogic methodName="checkButtonVisibility" businessObjectClass="BoUserDailyReport" businessObjectType="" asynchronous="false" accessibility="PUBLIC" final="false" module="CORE" simpleEditorOnly="">
  <Parameters>
    <MethodInput name="mode" type="String" />
  </Parameters>
<Code language="JavaScript">
<![CDATA[var visible = false;
var isResponsible = false;
var nextStates;

// Check if current user is responsible
if (me.getResponsiblePKey() === ApplicationContext.get('user').getPKey()) {
  isResponsible = true;
}

if (!(me.getBoUserDocMeta().getMobilityRelevant() === "0" || me.getPhase().toLowerCase() === "approved")) {
  switch (mode) {

      //Detail Flyout Done-Button
    case "detailDone":
      if(me.getPhase().toLowerCase() !== "approved" && me.getPhase().toLowerCase() !== "released" && isResponsible) {
        visible = true;
      }
      break;

      // Execute Break Button for initial time cards
    case "break":
      if(!(me.getBoUserDocMeta().getUiGroup() !== "TimeCard" ||
           !Utils.isDefined(ApplicationContext.get("openTimeCardPKey")) ||
           Utils.isEmptyString(ApplicationContext.get("openTimeCardPKey")) ||
           me.getPhase().toLowerCase() !== "initial" ||
           Utils.isEmptyString(me.getBoUserDocMeta().getBreakUsrTimeEntryMetaPKey()) || !isResponsible)) {
        visible = true;
      }
      break;

      // Check if manual time card creation is allowed
      // 1: If there is already an open time card for the current user (UsrDailyReport.Phase = 'Initial', UsrDailyReport.ResponsiblePKey = current user) no second running time card can be created
      // 2: If the user has role 'Tour User', manual time card creation is not available (the time card will be created via tour).
    case "add":
      if(!((Utils.isDefined(ApplicationContext.get("openTimeCardPKey")) &&
            !Utils.isEmptyString(ApplicationContext.get("openTimeCardPKey"))) ||
           ApplicationContext.get('user').hasRole('TourUser'))) {
        visible = true;
      }
      break;

    case "approveAll":
      if(ApplicationContext.get('user').getIsSupervisor() == "1") {
        visible = true;
      }
      break;

    case "update":
      if(me.getBoUserDocMeta().getUiGroup()!=="TimeCard" && ((me.getPhase().toLowerCase() === "initial"|| me.getPhase().toLowerCase() === "correction") && isResponsible)) {
        visible = true;
      }
      break;

    case "release":
      nextStates = me.getBoWorkflow().getNextStatesByStateType(me.getActualStatePKey(), "Released");
      if(Utils.isDefined(nextStates[0]) && isResponsible) {
        visible = true;
      }
      // Manual Release should not be possible if TimeCard is created
      // automatically within the tour

      if(me.getBoUserDocMeta().getUiGroup() === "TimeCard" && Utils.isDefined(me.getLoUsrTimeEntry())) {
        var tourPKey = me.getLoUsrTimeEntry().getItemsByParamArray([{"tmgTourPKey": " ", "op":"NE"}]);
        if (tourPKey.length > 0) {
          visible =  false;
        }
      }
      break;

    case "reject":
      // Note: Reject is internally mapped to correction
      nextStates = me.getBoWorkflow().getNextStatesByStateType(me.getActualStatePKey(), "Correction");
      if(Utils.isDefined(nextStates[0]) && isResponsible) {
        visible = true;
      }
      break;

    case "approve":
      nextStates = me.getBoWorkflow().getNextStatesByStateType(me.getActualStatePKey(), "Approved");
      if(Utils.isDefined(nextStates[0]) && isResponsible) {
        visible = true;
      }
      break;
  }
}]]>
</Code>
  <Return name="visible" value="visible" />
</BusinessLogic>