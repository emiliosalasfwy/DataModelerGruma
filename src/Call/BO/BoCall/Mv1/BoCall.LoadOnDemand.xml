<BusinessLogic methodName="loadOnDemand" businessObjectClass="BoCall" businessObjectType="" asynchronous="true" accessibility="PUBLIC" final="false" module="CORE" simpleEditorOnly="">
  <Parameters>
    <MethodInput name="loadMode" type="String" />
  </Parameters>
<Code language="JavaScript">
<![CDATA[var promise = when.resolve(me);
var callParams = [];
var callQuery = {};

if (loadMode === "Attachments" && !Utils.isDefined(me.getLoCallAttachments())) {

  var callJobRestriction;
  if (me.getLuCallMeta().getConsiderPOSCheck() == "0") {
    callJobRestriction = " AND Visit_Job__c.POS__c = ' ' ";
  }
  else {
    callJobRestriction = " AND 1=1 ";
  }
  callQuery.params = callParams;

  callParams.push({
    "field" : "callPKey",
    "value" : me.getPKey()
  });

  callParams.push({
    "field" : "referencePKey",
    "value" : me.getPKey()
  });

  callParams.push({
    "field" : "referencePKeyComp",
    "value" : "EQ"
  });

  callParams.push({
    "field" : "callJobRestriction",
    "value" :  callJobRestriction
  });

  promise = BoFactory.loadListAsync("LoCallAttachments", callQuery).then(function (callAttachmentList) {
    me.setObjectStatusFrozen(true);
    me.setLoCallAttachments(callAttachmentList);
    me.setObjectStatusFrozen(false);
    return BoFactory.loadListAsync("LoAtmAttachment", callQuery);
  }).then(function(atmList) {
    me.setObjectStatusFrozen(true);
    me.setLoAtmAttachment(atmList);
    me.setObjectStatusFrozen(false);
    return me;
  });

}
else if (loadMode === "Assets" && !Utils.isDefined(me.getLoCallAssetOverview())) {

  callQuery.params = callParams;
  callParams.push({
    "field" : "customerPKey",
    "value" : me.getBpaMainPKey()
  });
  callParams.push({
    "field" : "clbPKey",
    "value" : me.getPKey()
  });
  callParams.push({
    "field" : "clbDate",
    "value" : me.getDateFrom()
  });

  promise = BoFactory.loadObjectByParamsAsync(LO_CALLASSETOVERVIEW, callQuery)
    .then(function (loAssetOverview) {
    me.setLoCallAssetOverview(loAssetOverview);
    me.addItemChangedEventListener('loCallAssetOverview', me.onAssetSurveyChanged);
    return me;
  });
}
else if (loadMode === "Assets" && Utils.isDefined(me.getLoCallAssetOverview())) {

  var existingitems = me.getLoCallAssetOverview().getItemObjects();
  if (existingitems.length > 0) {
    me.getLoCallAssetOverview().setCurrentByPKey(existingitems[0].getPKey());
  }
}]]>
</Code>
  <Return name="returnName" value="promise" />
</BusinessLogic>