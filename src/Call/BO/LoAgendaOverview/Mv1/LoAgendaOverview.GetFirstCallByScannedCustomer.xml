<BusinessLogic methodName="getFirstCallByScannedCustomer" businessObjectClass="LoAgendaOverview" businessObjectType="listobject" asynchronous="true" accessibility="PUBLIC" final="false" module="CORE" simpleEditorOnly="">
  <Parameters>
    <MethodInput name="customerPKey" type="String" />
  </Parameters>
<Code language="JavaScript">
<![CDATA[var promise;
var callPKey = "";

if(Utils.isDefined(ApplicationContext.get('currentTourPKey')) && !Utils.isEmptyString(ApplicationContext.get('currentTourPKey')) &&
   Utils.isDefined(ApplicationContext.get('currentTourStatus')) && ApplicationContext.get('currentTourStatus') === "Running")
{
  promise = BoFactory.loadObjectByParamsAsync("LoTourRelatedCalls", {"TmgMainPKey" : ApplicationContext.get('currentTourPKey')})
    .then(
    function(loTourRelatedCalls)
    {
      if(Utils.isDefined(loTourRelatedCalls) && loTourRelatedCalls.getAllItems().length > 0)
      {
        loTourRelatedCalls.setFilter("bpaMainPKey", customerPKey);            

        if (loTourRelatedCalls.getItemObjects().length > 0)
        {
          callPKey = loTourRelatedCalls.getItemObjects()[0].getPKey();
        }

        loTourRelatedCalls.resetFilter("bpaMainPKey");
      }
      return callPKey;
    }); 
}
else
{
  me.orderBy({"dateFrom":"ASC", "timeFrom":"ASC"});

  if(me.getAllItems().length > 0)
  {
    //Filter on Current Date
    var dToday = Utils.isSfBackend() ? Utils.createAnsiDateToday() : Utils.createAnsiDateTimeToday();
    me.setFilterArray([ {"bpaMainPKey" : customerPKey, "op" : "EQ"}, {"dateFrom" : dToday, "op" : "EQ"}, {"clbStatus" : "Planned", "op": "EQ"} ]);

    if (me.getItemObjects().length > 0) 
    {
      callPKey = me.getItemObjects()[0].getPKey();
    }  

    me.resetFilter("bpaMainPKey");
    me.resetFilter("dateFrom");
    me.resetFilter("clbStatus");
  }

  promise = when.resolve(callPKey);
}]]>
</Code>
  <Return name="callPKey" value="promise" />
</BusinessLogic>