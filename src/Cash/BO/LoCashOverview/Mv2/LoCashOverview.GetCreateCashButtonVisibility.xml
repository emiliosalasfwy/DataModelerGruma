<BusinessLogic methodName="getCreateCashButtonVisibility" businessObjectClass="LoCashOverview" businessObjectType="listobject" asynchronous="false" accessibility="PUBLIC" final="false" module="CORE" simpleEditorOnly="">
  <Parameters>
    <MethodInput name="mode" type="String" />
  </Parameters>
<Code language="JavaScript">
<![CDATA[var visible = false;
var isTourRunning = false;
var navigation = "";
var listActiveObjectRelations;
var currentTour = "";
var runningTour = "";
var endOfDayPossible = "";
var items;
var i;

if (Utils.isDefined(ApplicationContext.get('currentTourPKey'))){
  runningTour = ApplicationContext.get('currentTourPKey');
}

//Reading endOfDayPossible variable value returned from DSDDashboardProcess includes the check on open Call/ Sales / Not related doc
if (Utils.isDefined(ApplicationContext.get('endOfDayPossible'))){
  endOfDayPossible = ApplicationContext.get('endOfDayPossible');
}

if (Utils.isDefined(Framework.getProcessContext().currentTourPKey)){
  currentTour = Framework.getProcessContext().currentTourPKey;
  if((currentTour !== runningTour) || (Utils.isEmptyString(currentTour) && Utils.isEmptyString(runningTour))){
    return false;
  }
}

//Available object relations for running tour
if (Utils.isDefined(Framework.getProcessContext().activeObjectRelations)){
  listActiveObjectRelations = Framework.getProcessContext().activeObjectRelations;
}

if(Utils.isDefined(ApplicationContext.get("currentTourPKey")) &&
   ApplicationContext.get("currentTourStatus") === "Running") {
  isTourRunning = true;
}
else {
  return false;
}

if (Utils.isDefined(Framework.getProcessContext().navigationMode)) {
  navigation = Framework.getProcessContext().navigationMode;
}

switch (mode) {
    //CheckOut
  case "checkOut":
    if(isTourRunning && (navigation === "StartOfDay")) {
      //Initial check out document exists --> check out button opens it
      if (me.getAllItems().length > 0) {
        items = me.getAllItems();
        for (i = 0; i < items.length; i++) {
          if (items[i].getDocumentType() === "CashCheckOut" && items[i].getPhase() === "Initial" && items[i].getUsedForStartOfDay() == "1") {
            visible = true;
            break;
          }
        }
      }

      //There exists at least one check-out template related to the running tour
      if (!visible && Utils.isDefined(listActiveObjectRelations) && listActiveObjectRelations.getAllItems().length > 0) {
        items = listActiveObjectRelations.getAllItems();

        for (i = 0; i < items.length; i++) {
          if (items[i].getUsage() === "SdoMeta.CashCheckOut" && items[i].getUsedForStartOfDay() == "1") {
            visible = true;
            break;
          }
        }
      }
    }
    break;

    //CheckIn
  case "checkIn":
    if(isTourRunning && (navigation === "EndOfDay")) {
      //Initial check in document exists --> check out button opens it
      if (me.getAllItems().length > 0) {
        items = me.getAllItems();
        for (i = 0; i < items.length; i++) {
          if (items[i].getDocumentType() === "CashCheckIn" && items[i].getPhase() === "Initial" && items[i].getUsedForEndOfDay() == "1") {
            visible = true;
            break;
          }
        }
      }

      //There exists at least one check-in template related to the running tour
      if (!visible && Utils.isDefined(listActiveObjectRelations) && listActiveObjectRelations.getAllItems().length > 0) {
        items = listActiveObjectRelations.getAllItems();

        for (i = 0; i < items.length; i++) {
          if (items[i].getUsage() === "SdoMeta.CashCheckIn" && items[i].getUsedForEndOfDay() == "1") {
            visible = true;
            break;
          }
        }
      }
      //There exists at least one open Call/ Sales / Not related doc
      if(endOfDayPossible == '0') {
        visible = false;
      }
    }
    break;
    //New Document
  case "New":
    if(isTourRunning && (navigation === "Overview"))  {

      //There exists at least one Truck Load template related to the running tour
      if (!visible && Utils.isDefined(listActiveObjectRelations) && listActiveObjectRelations.getAllItems().length > 0) {
        items = listActiveObjectRelations.getAllItems();

        for (i = 0; i < items.length; i++) {
          if ((items[i].getUsage() === "SdoMeta.CashCheckIn" || items[i].getUsage() === "SdoMeta.CashCheckOut") &&
              (items[i].getUsedForStartOfDay() === "0" && items[i].getUsedForEndOfDay() === "0")) {
            visible = true;
            break;
          }
        }
      }
    }
    break;
}]]>
</Code>
  <Return name="visible" value="visible" />
</BusinessLogic>