<BusinessLogic methodName="afterSaveAsync" businessObjectClass="BoCash" businessObjectType="{BOType}" asynchronous="true" accessibility="PUBLIC" final="false" module="CORE" simpleEditorOnly="">
  <Parameters>
    <MethodInput name="result" type="Object" />
    <MethodInput name="context" type="Object" />
  </Parameters>
<Code language="JavaScript">
<![CDATA[var deferreds = [];

if (me.isEditable()) {
  deferreds.push(Facade.saveObjectAsync(me));

  if (Utils.isDefined(me.getLoWfeRecentState())) {
    deferreds.push(me.getLoWfeRecentState().saveAsync());
  }

  if (Utils.isDefined(me.getLoPayments())) {
    deferreds.push(me.getLoPayments().saveAsync());
  }

  if (Utils.isDefined(me.getLoInventories())) {
    deferreds.push(me.getLoInventories().saveAsync());
  }

  if (Utils.isDefined(me.getLoInventoryTransactions())) {
    deferreds.push(me.getLoInventoryTransactions().saveAsync());
  }

  if (Utils.isDefined(me.getLoSysSignatureAttribute())) {
    deferreds.push(me.getLoSysSignatureAttribute().saveAsync());
  }

  if (Utils.isDefined(me.getLoSysSignatureBlob())) {
    deferreds.push(me.getLoSysSignatureBlob().saveAsync());
  }

  if (Utils.isDefined(me.getLoGeoLocation())) {
    deferreds.push(Facade.saveListAsync(me.getLoGeoLocation()));
  }
}

var promise = when.all(deferreds).then(
  function () {
    if (me.getValidateForRelease() == "1"  && me.getSetPhaseInBeforeSave() == "1" && me.getOrgPhase() == me.getPhase()) {
      var buttonValues = {};
      buttonValues[Localization.resolve("OK")] = "ok";

      return MessageBox.displayMessage(Localization.resolve("MessageBox_Title_Error"), Localization.resolve("NoResponsibleFoundByWorkflow"), buttonValues).then(
        function () {
          return result;
        }
      );

    } else {

      var syncOption = me.getBoCashMeta().getSyncOptions();

      if (me.getPhase()==="Released" && me.getOrgPhase()!=="Released")
      { 
        if  (syncOption == "Release"|| syncOption == "ReleaseCancel")
        {
          Facade.startBackgroundReplication();
        } 
      }
      else if (me.getPhase()==="Canceled" && me.getOrgPhase()!=="Canceled")
      {
        if  (syncOption == "Cancel"|| syncOption == "ReleaseCancel")
        {
          Facade.startBackgroundReplication();
        } 
      }
      //Reset object status for all to prevent multiple saves
      me.traverse(function(node){
        node.setObjectStatus(STATE.PERSISTED);
        if(node.isList){
          node.getAllItems().forEach(function(item){
            item.setObjectStatus(STATE.PERSISTED);
          });
        }
      },function (a, b, c){});

      return result;
    }
  }
);]]>
</Code>
  <Return name="result" value="promise" />
</BusinessLogic>