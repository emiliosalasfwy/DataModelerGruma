<BusinessLogic methodName="getPaymentModReasonCodes" businessObjectClass="BoCash" businessObjectType="businessobject" asynchronous="true" accessibility="PUBLIC" final="false" module="CORE" simpleEditorOnly="">
  <Parameters>
    <MethodInput name="paymentMetaPKey" type="String" />
  </Parameters>
<Code language="JavaScript">
<![CDATA[var promise;

if(Utils.isDefined(paymentMetaPKey))
{
  var modReasonDict = me.getModReasonDict();

  if(!Utils.isDefined(modReasonDict))
  {
    modReasonDict = Utils.createDictionary();
  }

  if(modReasonDict.containsKey(paymentMetaPKey))
  {
    me.setLoModReasonSelectionBox(modReasonDict.get(paymentMetaPKey));

    promise = when.resolve();
  }
  else
  {
    var modReasonParams = [];
    var modReasonQuery = {};

    modReasonParams.push({ "field": "sdoPaymentMetaPKey", "value": paymentMetaPKey  });

    modReasonQuery.params = modReasonParams;

    promise = BoFactory.loadListAsync("LoPaymentModReason", modReasonQuery).then(
      function (loModReason) {
        var subItems;
        var items = loModReason.getAllItems();
        subItems = new Array(items.length);
        for(var i=0; i < items.length; i++)
        {
          subItems[i] = items[i].getModReason();
        }
        var selectionBoxList = Utils.getToggleListObject("SdoPaymentModReason", subItems);
        me.setLoModReasonSelectionBox(selectionBoxList);
        modReasonDict.add(paymentMetaPKey, selectionBoxList);
        me.setModReasonDict(modReasonDict);
      }
    );
  }
}
else
{
  promise = when.resolve();
}]]>
</Code>
  <Return name="result" value="promise" />
</BusinessLogic>